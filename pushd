#!/bin/bash
: '
============= part 1 ======================
The functions pushd and popd implement a stack of directories that enable you to move
to another directory temporarily and have the shell remember where you were. Implement them as shell functions.

specs: 
1. First time `pushd` called, pushd pushes current dir and cds to dir and pushes the dir
2. on subsequent call to `pushd`, cd to dir and push to dir
3. `popd` pops off the top dir, revealing new top dir and cd to top dir

- stack will be list of dirs separated by spaces

============= part 2 ======================
1. pushd +n takes the nth directory in the stack (starting with 0), rotates it to the
   top, and cds to it.
2. pushd without arguments, instead of complaining, swaps the two top directories
   on the stack and cds to the new top.
3. popd +n takes the nth directory in the stack and just deletes it.

'

function pushd() {
    DIR_STACK=${DIR_STACK:-$PWD' '}

    # check if dir arg exists 
        case "$#" in
            0)
                DIR_STACK=${DIR_STACK#*' '}
                nextdir=${DIR_STACK%%' '*}
                cd $nextdir
                echo "Switched to $nextdir"
                ;;
                # If 1 args then we will delete the dir of given position
            1)

            
            # Check for correct syntax of args
                if [ $(echo "$1" | grep '\+[0-9][0-9]*') ]; then 
                    pos=${1#+}
                    count=0
                    header=""
                    trailer=""
                    for dir in $DIR_STACK; do
                        if [ $pos -eq $count ];then
                            trailer=${DIR_STACK#*$dir' '}
                            DIR_STACK=$header$trailer
                            break
                        fi 
                         header="$header$dir "
                        count=$((count+1))
                    done
                    
                else 
                    echo "Invalid argument: $1"
                    exit 1
                fi
                ;;
            *)
                echo "Usage: $0 [+n]"
                ;;
        esac
    if [ -z "$1" ];then
        echo "Usage: pushd <dir>"
        return 1
    fi

    nextdir=$1
    if [ -n "$nextdir" ] && [ \( -d "$nextdir" \) -a \( -x "$nextdir" \) ]; then
        cd "$nextdir"
        DIR_STACK="${PWD} ${DIR_STACK}"
        echo "switched to $PWD"
    else
        echo "Still in $PWD"
    fi
}
pushd "$@"

